show databases;
use customer_behaviour;

-- Q1. What is the total revenue generated by male vs. female customers?


SELECT gender AS Gender, 
    SUM(purchase_amount) AS Revenue
FROM customers 
GROUP BY gender;

-- Q2. How many customers belong to each gender, and whatâ€™s their average and total spending?

SELECT gender AS Gender,
       COUNT(customer_id) AS Total_Customers,
       SUM(purchase_amount) AS Revenue,
       ROUND(AVG(purchase_amount), 2) AS Avg_Purchase
FROM customers
GROUP BY gender
ORDER BY Revenue DESC;


-- Q3. Which customers used discounts but still spent more than the overall average purchase amount?

SELECT customer_id,
       purchase_amount
FROM customers
WHERE discount_applied = 'Yes'
  AND purchase_amount >= (SELECT AVG(purchase_amount) FROM customers)
ORDER BY purchase_amount DESC;


-- Q4. Which gender has the highest number of high-spending discount users?

SELECT gender,
       COUNT(customer_id) AS high_spenders_with_discount
FROM customers
WHERE discount_applied = 'Yes'
  AND purchase_amount >= (SELECT AVG(purchase_amount) FROM customers)
GROUP BY gender;

-- Q5. What are the top 5 products with the highest average review ratings?

SELECT item_purchased, 
       ROUND(AVG(review_rating), 2) AS average_rating_product,
       COUNT(*) AS total_reviews
FROM customers
GROUP BY item_purchased
ORDER BY average_rating_product DESC
LIMIT 5;

-- Q6. What is the average purchase amount for Standard vs. Express shipping types?

SELECT shipping_type,
       ROUND(AVG(purchase_amount), 2) AS avg_purchase_amount
FROM customers
WHERE shipping_type IN ('Standard', 'Express')
GROUP BY shipping_type;

-- Q7. Which shipping type contributes the most to overall revenue?

SELECT shipping_type,
       COUNT(*) AS total_orders,
       SUM(purchase_amount) AS total_revenue,
       ROUND(AVG(purchase_amount), 2) AS avg_purchase_amount
FROM customers
WHERE shipping_type IN ('Standard', 'Express')
GROUP BY shipping_type
ORDER BY total_revenue DESC;


-- Q8. Do subscribed customers spend more than non-subscribers?

SELECT subscription_status,
       COUNT(customer_id) AS total_customer,
       ROUND(AVG(purchase_amount), 2) AS avg_spend,
       ROUND(SUM(purchase_amount), 2) AS total_spend,
       ROUND(100 * SUM(purchase_amount) / (SELECT SUM(purchase_amount) FROM customers), 2) AS revenue_percentage
FROM customers
GROUP BY subscription_status
ORDER BY total_spend DESC;

-- Q9. What is the discount usage rate per product?

SELECT item_purchased,
       ROUND(100 * SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END) / COUNT(*), 2) AS discount_rate
FROM customers
GROUP BY item_purchased
ORDER BY discount_rate DESC 
LIMIT 5;

-- Q10. How do purchase behaviors differ between discounted and non-discounted orders for each product?

WITH product_summary AS (
    SELECT item_purchased,
           COUNT(*) AS total_orders,
           SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END) AS discounted_orders,
           ROUND(AVG(CASE WHEN discount_applied = 'Yes' THEN purchase_amount END), 2) AS avg_discounted_spend,
           ROUND(AVG(CASE WHEN discount_applied = 'No' THEN purchase_amount END), 2) AS avg_non_discounted_spend
    FROM customers
    GROUP BY item_purchased
)
SELECT item_purchased,
       total_orders,
       discounted_orders,
       ROUND(100.0 * discounted_orders / total_orders, 2) AS discount_rate,
       avg_discounted_spend,
       avg_non_discounted_spend
FROM product_summary
ORDER BY discount_rate DESC;

-- Q11. How can customers be segmented based on previous purchases (New, Returning, Loyal)?

WITH customer_summary AS (
    SELECT customer_id,
           previous_purchases,
           CASE
               WHEN previous_purchases = 1 THEN 'New'
               WHEN previous_purchases BETWEEN 2 AND 10 THEN 'Returning'
               ELSE 'Loyal'
           END AS customer_segment
    FROM customers
)
SELECT customer_segment,
       COUNT(*) AS customer_count,
       ROUND(100.0 * COUNT(*) / (SELECT COUNT(*) FROM customers), 2) AS percentage_share
FROM customer_summary
GROUP BY customer_segment
ORDER BY customer_count DESC;

-- Q12. What is the average spending of each customer segment?

WITH customer_summary AS (
    SELECT customer_id,
           previous_purchases,
           purchase_amount,
           CASE
               WHEN previous_purchases = 1 THEN 'New'
               WHEN previous_purchases BETWEEN 2 AND 10 THEN 'Returning'
               ELSE 'Loyal'
           END AS customer_segment
    FROM customers
)
SELECT customer_segment,
       COUNT(*) AS total_customers,
       ROUND(AVG(purchase_amount), 2) AS avg_purchase,
       ROUND(SUM(purchase_amount), 2) AS total_revenue
FROM customer_summary
GROUP BY customer_segment
ORDER BY total_revenue DESC;

-- Q13.What are the top 3 most purchased products within each category?

WITH item_count AS (
    SELECT category,
           item_purchased,
           COUNT(customer_id) AS total_order,
           ROW_NUMBER() OVER (PARTITION BY category ORDER BY COUNT(customer_id) DESC) AS item_rank
    FROM customers
    GROUP BY category, item_purchased
)
SELECT category,
       item_rank,
       item_purchased,
       total_order
FROM item_count
WHERE item_rank <= 3
ORDER BY category, item_rank;


-- Q14. Are repeat buyers (more than 5 previous purchases) more likely to subscribe?

SELECT subscription_status,
       COUNT(CASE WHEN previous_purchases > 5 THEN 1 END) AS repeat_buyers,
       COUNT(*) AS total_customers,
       ROUND(100.0 * COUNT(CASE WHEN previous_purchases > 5 THEN 1 END) / COUNT(*), 2) AS repeat_buyer_percentage
FROM customers
GROUP BY subscription_status;

-- Q15.What is the revenue contribution of each age group?

SELECT age_group,
       COUNT(customer_id) AS total_customers,
       SUM(purchase_amount) AS total_revenue,
       ROUND(100.0 * SUM(purchase_amount) / (SELECT SUM(purchase_amount) FROM customers), 2) AS revenue_percentage
FROM customers
GROUP BY age_group
ORDER BY total_revenue DESC;

